name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      message:
        description: 'A custom message'
        required: false
        default: 'Hello from API!'
  issues:
    types: [opened]

jobs:
  build:
    # Only run when the issue title is our trigger
    if: startsWith(github.event.issue.title, '[TRIGGER]')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm ci
      - run: npm run build --if-present
      - run: npx cypress run

      # (Optional) Comment the run link on the trigger issue
      - name: Comment run link on issue
        if: ${{ github.event_name == 'issues' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            const body = [
              "âœ… Workflow started from this trigger.",
              "",
              `**Run URL:** ${runUrl}`
            ].join("\n");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body
            });

      # (Optional) Close and label the trigger issue to keep things tidy
      - name: Close & label trigger issue
        if: ${{ github.event_name == 'issues' }}
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.payload.issue.number;
            // Add a label (creates if repo already has it)
            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                labels: ['ci-trigger']
              });
            } catch (e) {
              core.warning(`Label add failed (ok if label doesn't exist): ${e.message}`);
            }
            // Close the issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              state: 'closed'
            });
